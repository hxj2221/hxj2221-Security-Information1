{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\2021后台\\Security-Information\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Administrator\\Desktop\\2021后台\\Security-Information\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\2021后台\\Security-Information\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\2021后台\\Security-Information\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\2021后台\\Security-Information\\src\\views\\H-Complaints\\components\\operation.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\2021后台\\Security-Information\\src\\views\\H-Complaints\\components\\operation.vue","mtime":1610941058862},{"path":"C:\\Users\\Administrator\\Desktop\\2021后台\\Security-Information\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\2021后台\\Security-Information\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\2021后台\\Security-Information\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\2021后台\\Security-Information\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\2021后台\\Security-Information\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBzZXJ2aWNlIGZyb20gIkAvc2VydmljZSI7CmltcG9ydCBMb29rIGZyb20gIi4uL2NvbXBvbmVudHMvTG9vayI7CmltcG9ydCBxcyBmcm9tICdxcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgb3BlcmF0aW9uZGF0YToge30sCiAgICBvcGRhdGE6IHt9CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBMb29rOiBMb29rCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGlzOiBmYWxzZSwKICAgICAgdXBmaWxlZGF0YXM6IHt9LAogICAgICB1cGZpbGVzc3M6IGZhbHNlLAogICAgICB0b2tlbjogJycsCiAgICAgIGVjb25vbWljOiAnJywKICAgICAgLy/nm7TmjqXnu4/mtY7mjZ/lpLEKICAgICAgbWFuYWdlbWVudDogJycsCiAgICAgIC8v566h55CG5o6q5pa9CiAgICAgIGV2ZW50dHlwZTogJycsCiAgICAgIC8v5oqV6K+J57G75YirCiAgICAgIGFjY291bnRhYmlsaXR5OiAnJywKICAgICAgLy/otKPku7vluqYKICAgICAgYWNjb3VudGFiaWxpdHlsaXN0OiBbewogICAgICAgIGlkOiAxLAogICAgICAgIHRpdGxlOiAi5LiA57qnIgogICAgICB9LCB7CiAgICAgICAgaWQ6IDIsCiAgICAgICAgdGl0bGU6ICLkuoznuqciCiAgICAgIH0sIHsKICAgICAgICBpZDogMywKICAgICAgICB0aXRsZTogIuS4iee6pyIKICAgICAgfV0sCiAgICAgIGNvbWRlOiAnJywKICAgICAgLy8KICAgICAgZGF0ZTogIiIsCiAgICAgIC8v57qm5a6a5pel5pyfCiAgICAgIGxpYWJsZTogIiIsCiAgICAgIC8v6LSj5Lu75Lq6CiAgICAgIGxpYWJsZWxpc3Q6IFtdLAogICAgICAvL+i0o+S7u+S6uuWIl+ihqAogICAgICBhZ2VudG5hbWU6ICIiLAogICAgICAvL+e7j+WKnuS6uuWnk+WQjQogICAgICBhZ2VudHBob25lOiAiIiwKICAgICAgLy/nu4/lip7kurrogZTns7vmlrnlvI8KICAgICAgdHJlYXRtZW50OiAiIiwKICAgICAgLy8g6K+K55aX57uP6L+HCiAgICAgIHJlc3BvbnNlOiAiIiwKICAgICAgLy/pkojlr7nmgKfnrZTlpI0KICAgICAgbmVlZHRpbWU6ICIiLAogICAgICAvL+i+k+WFpeWkqeaVsAogICAgICBpc3N1ZTogIiIsCiAgICAgIC8v5LiL5Y+R56eR5a6kCiAgICAgIGlzc3VlbGlzdDogW10sCiAgICAgIC8v56eR5a6k5YiX6KGoCiAgICAgIGZhY3RzOiAiIiwKICAgICAgLy/kuLvopoHkuovlrp4KICAgICAgZm9jdXM6ICIiLAogICAgICAvL+S6ieiurueEpueCuQogICAgICBhbmFseXNpczogIiIsCiAgICAgIC8v5qC55Zug5YiG5p6QCiAgICAgIHJlc3BvbnNpYmlsaXR5OiAiIiwKICAgICAgLy/otKPku7vmhI/op4EKICAgICAgbWVhc3VyZXM6ICIiLAogICAgICAvL+aVtOaUueaOquaWvQogICAgICBwcmVsaW1pbmFyeTogIiIsCiAgICAgIC8v5Yid5q2l5oSP6KeBCiAgICAgIGNoZWNrc3RhdGU6ICLor7fpgInmi6kiLAogICAgICAvL+mAieS4reeKtuaAgQogICAgICBzdGF0ZWxpc3Q6IFtdLAogICAgICAvL+eKtuaAgeWIl+ihqAogICAgICBkcmF3ZXI6IGZhbHNlLAogICAgICB1cGxvYWRmaWxlOiAiIiwKICAgICAgLy/kuIrkvKDpmYTku7YKICAgICAgZmlsZWRlc2NyaWJlOiAiIiwKICAgICAgLy/mlofku7bmj4/ov7AKICAgICAgZm9ybTogIiIsCiAgICAgIGZpbGV0aXRsZTogIiIsCiAgICAgIC8v5paH5Lu25qCH6aKYCiAgICAgIHVwZmlsZXM6IGZhbHNlLAogICAgICBkaWFsb2dWaXNpYmxlc3M6IGZhbHNlLAogICAgICByZWFzb246ICIiLAogICAgICAvL+aKleivieWOn+WboAogICAgICBwZW9wZWw6ICIiLAogICAgICAvL+W9k+S6i+WRmOW3pQogICAgICBvcHRpb25zOiBbLy/lkZjlt6XliJfooagKICAgICAgewogICAgICAgIHZhbHVlOiAiMSIsCiAgICAgICAgbGFibGU6ICLnu4jmraIiCiAgICAgIH1dLAogICAgICBmaWxlTGlzdDogW10sCiAgICAgIGJhc2U2NGZpbGU6ICcnCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgLy/ov5nkuKpmaWxl5Y+C5pWwIOS5n+WwseaYr+aWh+S7tuS/oeaBr++8jOS9oOS9v+eUqCDmj5Lku7Yg5pe2IOS9oOWwseWPr+S7peaJk+WNsOWHuuaWh+S7tuS/oeaBryDnnIvnnIvlmJsKICAgIGdldEJhc2U2NDogZnVuY3Rpb24gZ2V0QmFzZTY0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgICB2YXIgZmlsZVJlc3VsdCA9ICIiOwogICAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKF90aGlzLmZpbGVMaXN0WzBdLnJhdyk7IC8v5byA5aeL6L2sCgogICAgICAgIHJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICBmaWxlUmVzdWx0ID0gcmVhZGVyLnJlc3VsdDsKICAgICAgICB9OyAvL+i9rCDlpLHotKUKCgogICAgICAgIHJlYWRlci5vbmVycm9yID0gZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICByZWplY3QoZXJyb3IpOwogICAgICAgIH07IC8v6L2sIOe7k+adnyAg5ZKx5bCxIHJlc29sdmUg5Ye65Y67CgoKICAgICAgICByZWFkZXIub25sb2FkZW5kID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgcmVzb2x2ZShmaWxlUmVzdWx0KTsKICAgICAgICB9OwogICAgICB9KTsKICAgIH0sCiAgICB1cGZpbGVzdWJtaXQ6IGZ1bmN0aW9uIHVwZmlsZXN1Ym1pdCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgZmlsZSA9IHRoaXMuZmlsZUxpc3RbMF07CiAgICAgIGNvbnNvbGUubG9nKGZpbGUucmF3KTsKICAgICAgdGhpcy5nZXRCYXNlNjQoZmlsZS5yYXcpLnRoZW4oZnVuY3Rpb24gKHJlc0Jhc2U2NCkgewogICAgICAgIF90aGlzMi5iYXNlNjRmaWxlID0gcmVzQmFzZTY0LnNwbGl0KCcsJylbMV07IC8v55u05o6l5ou/5YiwYmFzZTY05L+h5oGvCgogICAgICAgIGNvbnNvbGUubG9nKF90aGlzMi5iYXNlNjRmaWxlKTsKICAgICAgICB2YXIgcGFyYW1zID0gewogICAgICAgICAgLy8gZXZlbnRfbnVtYmVyOnRoaXMuJHBhcmVudC5vcGRhdGFbMF0uZXZlbnRfbnVtYmVyLC8v57yW5Y+3CiAgICAgICAgICBmaWxlOiBfdGhpczIuYmFzZTY0ZmlsZSAvLyAgZmlsZV9uYW1lOnRoaXMuZmlsZXRpdGxlLAogICAgICAgICAgLy8gcmVwcmVzZW50OnRoaXMuZmlsZWRlc2NyaWJlCgogICAgICAgIH07CiAgICAgICAgY29uc29sZS5sb2cocGFyYW1zKTsKICAgICAgICBzZXJ2aWNlLnVwbG9hZGZpbGVzKHBhcmFtcykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgdGhpcy51cGZpbGVzc3MgPSB0cnVlOwogICAgICB0aGlzLnVwZmlsZXMgPSBmYWxzZTsKICAgIH0sCiAgICBoYW5kbGVDaGFuZ2U6IGZ1bmN0aW9uIGhhbmRsZUNoYW5nZShmaWxlLCBmaWxlTGlzdCkgewogICAgICBpZiAodGhpcy5maWxlZGVzY3JpYmUgIT09ICcnICYmIHRoaXMuZmlsZXRpdGxlICE9PSAnJykgewogICAgICAgIGZpbGUubmFtZSA9IHRoaXMuZmlsZXRpdGxlOwogICAgICAgIGZpbGUuZmlsZWRlc2NyaWJlID0gdGhpcy5maWxlZGVzY3JpYmU7CiAgICAgICAgdGhpcy5maWxlTGlzdC5wdXNoKGZpbGUpOwogICAgICB9CiAgICB9LAogICAgZ2V0Q2FzY2FkZXJPYmo6IGZ1bmN0aW9uIGdldENhc2NhZGVyT2JqKCkgewogICAgICBjb25zb2xlLmxvZyh0aGlzLmNvbWRlKTsKICAgIH0sCiAgICAvL+S4i+WPkQogICAgaXNzdWVzc3M6IGZ1bmN0aW9uIGlzc3Vlc3NzKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIGlmICh0aGlzLmNoZWNrc3RhdGUgPT0gMSkgewogICAgICAgIC8v5LiL5Y+R56eR5a6k6LCD5p+lCiAgICAgICAgaWYgKHRoaXMuY29tZGUgIT09ICcnICYmIHRoaXMuY29tZGUgIT09IG51bGwgJiYgdGhpcy5uZWVkdGltZSAhPT0gJycpIHsKICAgICAgICAgIHZhciBjb21kZSA9IHRoaXMuY29tZGUubWFwKGZ1bmN0aW9uICh4KSB7CiAgICAgICAgICAgIHJldHVybiB4WzBdOwogICAgICAgICAgfSk7CiAgICAgICAgICBjb25zb2xlLmxvZyhjb21kZSk7CiAgICAgICAgICB2YXIgZGF0YSA9IHsKICAgICAgICAgICAgZXZlbnRfbnVtYmVyOiB0aGlzLiRwYXJlbnQub3BkYXRhWzBdLmV2ZW50X251bWJlciwKICAgICAgICAgICAgLy/nvJblj7cKICAgICAgICAgICAgZGVwYXJ0bWVudF9pZHM6IGNvbWRlLAogICAgICAgICAgICAvL+S4i+WPkeenkeWupAogICAgICAgICAgICByZXBseV90aW1lOiB0aGlzLm5lZWR0aW1lIC8vIOi+k+WFpeWkqeaVsAoKICAgICAgICAgIH07CiAgICAgICAgICBzZXJ2aWNlLklzc3VlZGVwYXJ0bWVudChkYXRhKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKTsKCiAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PSAyMDAxMCkgewogICAgICAgICAgICAgIF90aGlzMy4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgICBtZXNzYWdlOiByZXMubXNnLAogICAgICAgICAgICAgICAgdHlwZTogInN1Y2Nlc3MiLAogICAgICAgICAgICAgICAgZHVyYXRpb246IDEwMDAKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBfdGhpczMuJG1lc3NhZ2UoewogICAgICAgICAgICAgICAgbWVzc2FnZTogcmVzLm1zZywKICAgICAgICAgICAgICAgIHR5cGU6ICJlcnJvciIsCiAgICAgICAgICAgICAgICBkdXJhdGlvbjogMTAwMAogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMuY29tZGUgPT0gJycgfHwgdGhpcy5jb21kZSA9PSBudWxsKSB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICAgICAgbWVzc2FnZTogJ+ivt+mAieaLqeS4i+WPkeenkeWupCcsCiAgICAgICAgICAgIHR5cGU6ICJlcnJvciIsCiAgICAgICAgICAgIGR1cmF0aW9uOiAxMDAwCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMubmVlZHRpbWUgPT0gJycgfHwgdGhpcy5uZWVkdGltZSA9PSBudWxsKSB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICAgICAgbWVzc2FnZTogJ+ivt+mAieaLqei+k+WFpeenkeWupOiwg+afpeWkqeaVsCcsCiAgICAgICAgICAgIHR5cGU6ICJlcnJvciIsCiAgICAgICAgICAgIGR1cmF0aW9uOiAxMDAwCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0gZWxzZSBpZiAodGhpcy5jaGVja3N0YXRlID09IDExKSB7CiAgICAgICAgaWYgKHRoaXMuY29tZGUgIT09ICcnICYmIHRoaXMuY29tZGUgIT09IG51bGwpIHsKICAgICAgICAgIHZhciBfY29tZGUgPSB0aGlzLmNvbWRlLm1hcChmdW5jdGlvbiAoeCkgewogICAgICAgICAgICByZXR1cm4geFswXTsKICAgICAgICAgIH0pOwoKICAgICAgICAgIGNvbnNvbGUubG9nKF9jb21kZSk7CiAgICAgICAgICB2YXIgX2RhdGEgPSB7CiAgICAgICAgICAgIGV2ZW50X251bWJlcjogdGhpcy4kcGFyZW50Lm9wZGF0YVswXS5ldmVudF9udW1iZXIsCiAgICAgICAgICAgIC8v57yW5Y+3CiAgICAgICAgICAgIGRlcGFydG1lbnRfaWRzOiBfY29tZGUgLy/kuIvlj5Hnp5HlrqQKCiAgICAgICAgICB9OwogICAgICAgICAgY29uc29sZS5sb2cocXMuc3RyaW5naWZ5KF9kYXRhKSk7CiAgICAgICAgICBzZXJ2aWNlLkltcHJvdmVEZXBhcnRtZW50KF9kYXRhKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKTsKCiAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PSAyMDAxMCkgewogICAgICAgICAgICAgIF90aGlzMy4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgICBtZXNzYWdlOiByZXMubXNnLAogICAgICAgICAgICAgICAgdHlwZTogInN1Y2Nlc3MiLAogICAgICAgICAgICAgICAgZHVyYXRpb246IDEwMDAKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBfdGhpczMuJG1lc3NhZ2UoewogICAgICAgICAgICAgICAgbWVzc2FnZTogcmVzLm1zZywKICAgICAgICAgICAgICAgIHR5cGU6ICJlcnJvciIsCiAgICAgICAgICAgICAgICBkdXJhdGlvbjogMTAwMAogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAvL+aPkOS6pAogICAgc3VibWl0OiBmdW5jdGlvbiBzdWJtaXQoKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgaWYgKHRoaXMuJHBhcmVudC5vcGRhdGFbMF0uc3RhdGUuc3RhdGVfdmFsID09IDEpIHsKICAgICAgICAvL+enkeWupOaPkOS6pAogICAgICAgIHZhciBwYXJhbXMgPSB7CiAgICAgICAgICBldmVudF9udW1iZXI6IHRoaXMuJHBhcmVudC5vcGRhdGFbMF0uZXZlbnRfbnVtYmVyLAogICAgICAgICAgLy/nvJblj7cKICAgICAgICAgIGludmVzdGlnYXRvcl9pZHM6IHRoaXMucGVvcGVsLAogICAgICAgICAgLy/lvZPkuovlkZjlt6UKICAgICAgICAgIGRpYWdub3NlX2ZlZWRiYWNrOiB0aGlzLnRyZWF0bWVudCwKICAgICAgICAgIC8v6K+K55aX57uP6L+HCiAgICAgICAgICBldmVudF9yZXBseTogdGhpcy5yZXNwb25zZSAvL+mSiOWvueetlOWkjQoKICAgICAgICB9OwogICAgICAgIHNlcnZpY2UuZGVwYXJ0bWVudHN1Ym1pdChwYXJhbXMpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgY29uc29sZS5sb2cocmVzKTsKCiAgICAgICAgICBpZiAocmVzLmNvZGUgPT0gMjAwMTApIHsKICAgICAgICAgICAgX3RoaXM0LiRtZXNzYWdlKHsKICAgICAgICAgICAgICBtZXNzYWdlOiByZXMubXNnLAogICAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwKICAgICAgICAgICAgICBkdXJhdGlvbjogMTAwMAogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIF90aGlzNC4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgbWVzc2FnZTogcmVzLm1zZywKICAgICAgICAgICAgICB0eXBlOiAiZXJyb3IiLAogICAgICAgICAgICAgIGR1cmF0aW9uOiAxMDAwCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9IGVsc2UgaWYgKHRoaXMuY2hlY2tzdGF0ZSA9PSAzKSB7CiAgICAgICAgLy/pmaLlhoXorqjorroKICAgICAgICBpZiAodGhpcy5jb21kZSAhPT0gJycgJiYgdGhpcy5jb21kZSAhPT0gbnVsbCAmJiB0aGlzLmZhY3RzICE9PSAnJyAmJiB0aGlzLmZvY3VzICE9PSAnJykgewogICAgICAgICAgdmFyIGNvbWRlID0gdGhpcy5jb21kZS5tYXAoZnVuY3Rpb24gKHgpIHsKICAgICAgICAgICAgcmV0dXJuIHhbMF07CiAgICAgICAgICB9KTsKICAgICAgICAgIHZhciBfcGFyYW1zID0gewogICAgICAgICAgICBldmVudF9udW1iZXI6IHRoaXMuJHBhcmVudC5vcGRhdGFbMF0uZXZlbnRfbnVtYmVyLAogICAgICAgICAgICAvL+e8luWPtwogICAgICAgICAgICBjb3B5X2RlcGFydG1lbnQ6IGNvbWRlLAogICAgICAgICAgICAvL+aKhOmAgemDqOmXqAogICAgICAgICAgICBleGFtaW5lX3RleHRvbmU6IHRoaXMuZmFjdHMsCiAgICAgICAgICAgIC8v5Li76KaB5LqL5a6eCiAgICAgICAgICAgIGV4YW1pbmVfdGV4dHR3bzogdGhpcy5mb2N1cyAvL+S6ieiurueEpueCuQoKICAgICAgICAgIH07CiAgICAgICAgICBzZXJ2aWNlLmRpc2N1c3Npb24oX3BhcmFtcykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7CgogICAgICAgICAgICBpZiAocmVzLmNvZGUgPT0gMjAwMTApIHsKICAgICAgICAgICAgICBfdGhpczQuJG1lc3NhZ2UoewogICAgICAgICAgICAgICAgbWVzc2FnZTogcmVzLm1zZywKICAgICAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwKICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAxMDAwCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgX3RoaXM0LiRtZXNzYWdlKHsKICAgICAgICAgICAgICAgIG1lc3NhZ2U6IHJlcy5tc2csCiAgICAgICAgICAgICAgICB0eXBlOiAiZXJyb3IiLAogICAgICAgICAgICAgICAgZHVyYXRpb246IDEwMDAKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmNvbWRlICE9PSAnJyB8fCB0aGlzLmNvbWRlICE9PSBudWxsKSB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICAgICAgbWVzc2FnZTogJ+ivt+mAieaLqeaKhOmAgemDqOmXqCcsCiAgICAgICAgICAgIHR5cGU6ICJlcnJvciIsCiAgICAgICAgICAgIGR1cmF0aW9uOiAxMDAwCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMuZmFjdHMgPT0gJycpIHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgICBtZXNzYWdlOiAn5Li76KaB5LqL5a6e5LiN6IO95Li656m6JywKICAgICAgICAgICAgdHlwZTogImVycm9yIiwKICAgICAgICAgICAgZHVyYXRpb246IDEwMDAKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5mb2N1cyA9PSAnJykgewogICAgICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICAgIG1lc3NhZ2U6ICfkuonorq7nhKbngrnkuI3og73kuLrnqbonLAogICAgICAgICAgICB0eXBlOiAiZXJyb3IiLAogICAgICAgICAgICBkdXJhdGlvbjogMTAwMAogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9IGVsc2UgaWYgKHRoaXMuY2hlY2tzdGF0ZSA9PSA0KSB7CiAgICAgICAgLy/ljLvmgqPmsp/pgJrkuK0KICAgICAgICB2YXIgX3BhcmFtczIgPSB7CiAgICAgICAgICBldmVudF9udW1iZXI6IHRoaXMuJHBhcmVudC5vcGRhdGFbMF0uZXZlbnRfbnVtYmVyLAogICAgICAgICAgLy/nvJblj7cKICAgICAgICAgIGV4YW1pbmVfdGV4dG9uZTogdGhpcy5wcmVsaW1pbmFyeSwKICAgICAgICAgIC8v5Yid5q2l5oSP6KeBCiAgICAgICAgICBhcHBvaW50bWVudF90aW1lOiB0aGlzLmRhdGUgLy/nuqblrprml7bpl7QKCiAgICAgICAgfTsKICAgICAgICBzZXJ2aWNlLmNvbW11bmljYXRlKF9wYXJhbXMyKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7CgogICAgICAgICAgaWYgKHJlcy5jb2RlID09IDIwMDEwKSB7CiAgICAgICAgICAgIF90aGlzNC4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgbWVzc2FnZTogcmVzLm1zZywKICAgICAgICAgICAgICB0eXBlOiAic3VjY2VzcyIsCiAgICAgICAgICAgICAgZHVyYXRpb246IDEwMDAKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBfdGhpczQuJG1lc3NhZ2UoewogICAgICAgICAgICAgIG1lc3NhZ2U6IHJlcy5tc2csCiAgICAgICAgICAgICAgdHlwZTogImVycm9yIiwKICAgICAgICAgICAgICBkdXJhdGlvbjogMTAwMAogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfSBlbHNlIGlmICh0aGlzLmNoZWNrc3RhdGUgPT0gNSkgewogICAgICAgIC8v5Lq65rCR6LCD6KejCiAgICAgICAgdmFyIF9wYXJhbXMzID0gewogICAgICAgICAgZXZlbnRfbnVtYmVyOiB0aGlzLiRwYXJlbnQub3BkYXRhWzBdLmV2ZW50X251bWJlciwKICAgICAgICAgIC8v57yW5Y+3CiAgICAgICAgICBhcHBvaW50bWVudF90aW1lOiB0aGlzLmRhdGUgLy/nuqblrprml7bpl7QKCiAgICAgICAgfTsKICAgICAgICBzZXJ2aWNlLm1lZGlhdGUoX3BhcmFtczMpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgY29uc29sZS5sb2cocmVzKTsKCiAgICAgICAgICBpZiAocmVzLmNvZGUgPT0gMjAwMTApIHsKICAgICAgICAgICAgX3RoaXM0LiRtZXNzYWdlKHsKICAgICAgICAgICAgICBtZXNzYWdlOiByZXMubXNnLAogICAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwKICAgICAgICAgICAgICBkdXJhdGlvbjogMTAwMAogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIF90aGlzNC4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgbWVzc2FnZTogcmVzLm1zZywKICAgICAgICAgICAgICB0eXBlOiAiZXJyb3IiLAogICAgICAgICAgICAgIGR1cmF0aW9uOiAxMDAwCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9IGVsc2UgaWYgKHRoaXMuY2hlY2tzdGF0ZSA9PSA2KSB7CiAgICAgICAgLy/otKPku7vpibTlrprkuK0KICAgICAgICB2YXIgX3BhcmFtczQgPSB7CiAgICAgICAgICBldmVudF9udW1iZXI6IHRoaXMuJHBhcmVudC5vcGRhdGFbMF0uZXZlbnRfbnVtYmVyLAogICAgICAgICAgLy/nvJblj7cKICAgICAgICAgIGV4YW1pbmVfdGV4dG9uZTogdGhpcy5wcmVsaW1pbmFyeSwKICAgICAgICAgIC8v5oOF5Ya16K+05piOCiAgICAgICAgICBhcHBvaW50bWVudF90aW1lOiB0aGlzLmRhdGUgLy/nuqblrprml7bpl7QKCiAgICAgICAgfTsKICAgICAgICBzZXJ2aWNlLmFwcHJhaXNhbChfcGFyYW1zNCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpOwoKICAgICAgICAgIGlmIChyZXMuY29kZSA9PSAyMDAxMCkgewogICAgICAgICAgICBfdGhpczQuJG1lc3NhZ2UoewogICAgICAgICAgICAgIG1lc3NhZ2U6IHJlcy5tc2csCiAgICAgICAgICAgICAgdHlwZTogInN1Y2Nlc3MiLAogICAgICAgICAgICAgIGR1cmF0aW9uOiAxMDAwCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgX3RoaXM0LiRtZXNzYWdlKHsKICAgICAgICAgICAgICBtZXNzYWdlOiByZXMubXNnLAogICAgICAgICAgICAgIHR5cGU6ICJlcnJvciIsCiAgICAgICAgICAgICAgZHVyYXRpb246IDEwMDAKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5jaGVja3N0YXRlID09IDcpIHsKICAgICAgICAvL+aCo+aWueaOqOi/nwogICAgICAgIHZhciBfcGFyYW1zNSA9IHsKICAgICAgICAgIGV2ZW50X251bWJlcjogdGhpcy4kcGFyZW50Lm9wZGF0YVswXS5ldmVudF9udW1iZXIsCiAgICAgICAgICAvL+e8luWPtwogICAgICAgICAgZXhhbWluZV90ZXh0b25lOiB0aGlzLnByZWxpbWluYXJ5LAogICAgICAgICAgLy/lpITnkIbmhI/op4EKICAgICAgICAgIGFwcG9pbnRtZW50X3RpbWU6IHRoaXMuZGF0ZSAvL+e6puWumuaXtumXtAoKICAgICAgICB9OwogICAgICAgIHNlcnZpY2UuZGVsYXkoX3BhcmFtczUpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgY29uc29sZS5sb2cocmVzKTsKCiAgICAgICAgICBpZiAocmVzLmNvZGUgPT0gMjAwMTApIHsKICAgICAgICAgICAgX3RoaXM0LiRtZXNzYWdlKHsKICAgICAgICAgICAgICBtZXNzYWdlOiByZXMubXNnLAogICAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwKICAgICAgICAgICAgICBkdXJhdGlvbjogMTAwMAogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIF90aGlzNC4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgbWVzc2FnZTogcmVzLm1zZywKICAgICAgICAgICAgICB0eXBlOiAiZXJyb3IiLAogICAgICAgICAgICAgIGR1cmF0aW9uOiAxMDAwCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9IGVsc2UgaWYgKHRoaXMuY2hlY2tzdGF0ZSA9PSA4KSB7CiAgICAgICAgLy/kuK3mraLosIPoioIKICAgICAgICB2YXIgX3BhcmFtczYgPSB7CiAgICAgICAgICBldmVudF9udW1iZXI6IHRoaXMuJHBhcmVudC5vcGRhdGFbMF0uZXZlbnRfbnVtYmVyLAogICAgICAgICAgLy/nvJblj7cKICAgICAgICAgIGV4YW1pbmVfdGV4dG9uZTogdGhpcy5wcmVsaW1pbmFyeSwKICAgICAgICAgIC8v5LqL5a6e5Y+K55CG55SxCiAgICAgICAgICBhcHBvaW50bWVudF90aW1lOiB0aGlzLmRhdGUgLy/nuqblrprml7bpl7QKCiAgICAgICAgfTsKICAgICAgICBzZXJ2aWNlLnN1c3BlbnNpb24oX3BhcmFtczYpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgY29uc29sZS5sb2cocmVzKTsKCiAgICAgICAgICBpZiAocmVzLmNvZGUgPT0gMjAwMTApIHsKICAgICAgICAgICAgX3RoaXM0LiRtZXNzYWdlKHsKICAgICAgICAgICAgICBtZXNzYWdlOiByZXMubXNnLAogICAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwKICAgICAgICAgICAgICBkdXJhdGlvbjogMTAwMAogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIF90aGlzNC4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgbWVzc2FnZTogcmVzLm1zZywKICAgICAgICAgICAgICB0eXBlOiAiZXJyb3IiLAogICAgICAgICAgICAgIGR1cmF0aW9uOiAxMDAwCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9IGVsc2UgaWYgKHRoaXMuY2hlY2tzdGF0ZSA9PSA5KSB7CiAgICAgICAgLy/nu4jmraLosIPoioIKICAgICAgICB2YXIgX3BhcmFtczcgPSB7CiAgICAgICAgICBldmVudF9udW1iZXI6IHRoaXMuJHBhcmVudC5vcGRhdGFbMF0uZXZlbnRfbnVtYmVyLAogICAgICAgICAgLy/nvJblj7cKICAgICAgICAgIGV4YW1pbmVfdGV4dG9uZTogdGhpcy5wcmVsaW1pbmFyeSwKICAgICAgICAgIC8v5LqL5a6e5Y+K55CG55SxCiAgICAgICAgICBhcHBvaW50bWVudF90aW1lOiB0aGlzLmRhdGUgLy/nuqblrprml7bpl7QKCiAgICAgICAgfTsKICAgICAgICBzZXJ2aWNlLnRlcm1pbmF0aW9uKF9wYXJhbXM3KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7CgogICAgICAgICAgaWYgKHJlcy5jb2RlID09IDIwMDEwKSB7CiAgICAgICAgICAgIF90aGlzNC4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgbWVzc2FnZTogcmVzLm1zZywKICAgICAgICAgICAgICB0eXBlOiAic3VjY2VzcyIsCiAgICAgICAgICAgICAgZHVyYXRpb246IDEwMDAKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBfdGhpczQuJG1lc3NhZ2UoewogICAgICAgICAgICAgIG1lc3NhZ2U6IHJlcy5tc2csCiAgICAgICAgICAgICAgdHlwZTogImVycm9yIiwKICAgICAgICAgICAgICBkdXJhdGlvbjogMTAwMAogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfSBlbHNlIGlmICh0aGlzLmNoZWNrc3RhdGUgPT0gMTApIHsKICAgICAgICAvL+WPuOazleivieiuvAogICAgICAgIHZhciBfcGFyYW1zOCA9IHsKICAgICAgICAgIGV2ZW50X251bWJlcjogdGhpcy4kcGFyZW50Lm9wZGF0YVswXS5ldmVudF9udW1iZXIsCiAgICAgICAgICAvL+e8luWPtwogICAgICAgICAgZXhhbWluZV90ZXh0b25lOiB0aGlzLnByZWxpbWluYXJ5LAogICAgICAgICAgLy/mg4XlhrXor7TmmI4KICAgICAgICAgIGFwcG9pbnRtZW50X3RpbWU6IHRoaXMuZGF0ZSAvL+e6puWumuaXtumXtAoKICAgICAgICB9OwogICAgICAgIHNlcnZpY2UubGl0aWdhdGlvbihfcGFyYW1zOCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpOwoKICAgICAgICAgIGlmIChyZXMuY29kZSA9PSAyMDAxMCkgewogICAgICAgICAgICBfdGhpczQuJG1lc3NhZ2UoewogICAgICAgICAgICAgIG1lc3NhZ2U6IHJlcy5tc2csCiAgICAgICAgICAgICAgdHlwZTogInN1Y2Nlc3MiLAogICAgICAgICAgICAgIGR1cmF0aW9uOiAxMDAwCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgX3RoaXM0LiRtZXNzYWdlKHsKICAgICAgICAgICAgICBtZXNzYWdlOiByZXMubXNnLAogICAgICAgICAgICAgIHR5cGU6ICJlcnJvciIsCiAgICAgICAgICAgICAgZHVyYXRpb246IDEwMDAKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSBpZiAodGhpcy4kcGFyZW50Lm9wZGF0YVswXS5zdGF0ZS5zdGF0ZV92YWwgPT0gMTEpIHsKICAgICAgICAvL+aUuei/m+WujOaIkO+8iOenkeWupO+8iQogICAgICAgIHZhciBfcGFyYW1zOSA9IHsKICAgICAgICAgIGV2ZW50X251bWJlcjogdGhpcy4kcGFyZW50Lm9wZGF0YVswXS5ldmVudF9udW1iZXIsCiAgICAgICAgICAvL+e8luWPtwogICAgICAgICAgaW52ZXN0aWdhdG9yX2lkczogdGhpcy5wZW9wZWwsCiAgICAgICAgICAvL+W9k+S6i+WRmOW3pQogICAgICAgICAgZXhhbWluZV90ZXh0b25lOiB0aGlzLmFuYWx5c2lzLAogICAgICAgICAgLy/moLnlm6DliIbmnpAKICAgICAgICAgIGV4YW1pbmVfdGV4dHR3bzogdGhpcy5yZXNwb25zaWJpbGl0eSwKICAgICAgICAgIC8v6LSj5Lu75oSP6KeBCiAgICAgICAgICBleGFtaW5lX3RleHR0aHJlZTogdGhpcy5tZWFzdXJlcyAvL+aVtOaUueaOquaWvQoKICAgICAgICB9OwogICAgICAgIGNvbnNvbGUubG9nKF9wYXJhbXM5KTsKICAgICAgICBzZXJ2aWNlLkltcHJvdmVEZXBhcnRtZW50c3VibWlzc2lvbihfcGFyYW1zOSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpOwoKICAgICAgICAgIGlmIChyZXMuY29kZSA9PSAyMDAxMCkgewogICAgICAgICAgICBfdGhpczQuJG1lc3NhZ2UoewogICAgICAgICAgICAgIG1lc3NhZ2U6IHJlcy5tc2csCiAgICAgICAgICAgICAgdHlwZTogInN1Y2Nlc3MiLAogICAgICAgICAgICAgIGR1cmF0aW9uOiAxMDAwCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgX3RoaXM0LiRtZXNzYWdlKHsKICAgICAgICAgICAgICBtZXNzYWdlOiByZXMubXNnLAogICAgICAgICAgICAgIHR5cGU6ICJlcnJvciIsCiAgICAgICAgICAgICAgZHVyYXRpb246IDEwMDAKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5jaGVja3N0YXRlID09IDEzKSB7CiAgICAgICAgLy/mjIHnu63mlLnov5vvvIjljLvpmaLvvIkKICAgICAgICB2YXIgX3BhcmFtczEwID0gewogICAgICAgICAgZXZlbnRfbnVtYmVyOiB0aGlzLiRwYXJlbnQub3BkYXRhWzBdLmV2ZW50X251bWJlciAvL+e8luWPtwoKICAgICAgICB9OwogICAgICAgIHNlcnZpY2UuSG9zcGl0YWxpbXByb3ZlbWVudChfcGFyYW1zMTApLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgY29uc29sZS5sb2cocmVzKTsKCiAgICAgICAgICBpZiAocmVzLmNvZGUgPT0gMjAwMTApIHsKICAgICAgICAgICAgX3RoaXM0LiRtZXNzYWdlKHsKICAgICAgICAgICAgICBtZXNzYWdlOiByZXMubXNnLAogICAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwKICAgICAgICAgICAgICBkdXJhdGlvbjogMTAwMAogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIF90aGlzNC4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgbWVzc2FnZTogcmVzLm1zZywKICAgICAgICAgICAgICB0eXBlOiAiZXJyb3IiLAogICAgICAgICAgICAgIGR1cmF0aW9uOiAxMDAwCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9IGVsc2UgaWYgKHRoaXMuY2hlY2tzdGF0ZSA9PSAxNCkgewogICAgICAgIC8v5pS56L+b5a6M5oiQ77yI5Yy76Zmi77yJCiAgICAgICAgdmFyIF9wYXJhbXMxMSA9IHsKICAgICAgICAgIGV2ZW50X251bWJlcjogdGhpcy4kcGFyZW50Lm9wZGF0YVswXS5ldmVudF9udW1iZXIsCiAgICAgICAgICAvL+e8luWPtwogICAgICAgICAgZXhhbWluZV90ZXh0b25lOiB0aGlzLnByZWxpbWluYXJ5LAogICAgICAgICAgLy/lpITnkIbmhI/op4EKICAgICAgICAgIGV4YW1pbmVfdGV4dHR3bzogdGhpcy5tYW5hZ2VtZW50IC8v566h55CG5o6q5pa9CgogICAgICAgIH07CiAgICAgICAgc2VydmljZS5JbXByb3ZlbWVudEVuZChfcGFyYW1zMTEpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgY29uc29sZS5sb2cocmVzKTsKCiAgICAgICAgICBpZiAocmVzLmNvZGUgPT0gMjAwMTApIHsKICAgICAgICAgICAgX3RoaXM0LiRtZXNzYWdlKHsKICAgICAgICAgICAgICBtZXNzYWdlOiByZXMubXNnLAogICAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwKICAgICAgICAgICAgICBkdXJhdGlvbjogMTAwMAogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIF90aGlzNC4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgbWVzc2FnZTogcmVzLm1zZywKICAgICAgICAgICAgICB0eXBlOiAiZXJyb3IiLAogICAgICAgICAgICAgIGR1cmF0aW9uOiAxMDAwCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9IGVsc2UgaWYgKHRoaXMuY2hlY2tzdGF0ZSA9PSAyMCkgewogICAgICAgIC8v5bey57uT5p2fCiAgICAgICAgaWYgKHRoaXMuY29tZGUgIT09ICcnICYmIHRoaXMuY29tZGUgIT09IG51bGwgJiYgdGhpcy5hY2NvdW50YWJpbGl0eSAhPT0gJycgJiYgdGhpcy5hY2NvdW50YWJpbGl0eSAhPT0gbnVsbCAmJiB0aGlzLmV2ZW50dHlwZSAhPT0gJycgJiYgdGhpcy5ldmVudHR5cGUgIT09IG51bGwpIHsKICAgICAgICAgIHZhciBfY29tZGUyID0gdGhpcy5jb21kZS5tYXAoZnVuY3Rpb24gKHgpIHsKICAgICAgICAgICAgcmV0dXJuIHhbMF07CiAgICAgICAgICB9KTsKCiAgICAgICAgICB2YXIgYWNjb3VudGFiaWxpdHkgPSB0aGlzLmFjY291bnRhYmlsaXR5Lm1hcChmdW5jdGlvbiAoeCkgewogICAgICAgICAgICByZXR1cm4geFswXTsKICAgICAgICAgIH0pOwogICAgICAgICAgdmFyIGV2ZW50dHlwZSA9IHRoaXMuZXZlbnR0eXBlLm1hcChmdW5jdGlvbiAoeCkgewogICAgICAgICAgICByZXR1cm4geFswXTsKICAgICAgICAgIH0pOwogICAgICAgICAgdmFyIF9wYXJhbXMxMiA9IHsKICAgICAgICAgICAgZXZlbnRfbnVtYmVyOiB0aGlzLiRwYXJlbnQub3BkYXRhWzBdLmV2ZW50X251bWJlciwKICAgICAgICAgICAgLy/nvJblj7cKICAgICAgICAgICAgcmVzcG9uc2liaWxpdHlfZGlkOiBfY29tZGUyLAogICAgICAgICAgICAvL+i0o+S7u+enkeWupAogICAgICAgICAgICBldmVudF90eXBlOiBldmVudHR5cGUsCiAgICAgICAgICAgIC8v5oqV6K+J57G75Z6LCiAgICAgICAgICAgIHJlc3BvbnNpYmlsaXR5X2hvdzogYWNjb3VudGFiaWxpdHksCiAgICAgICAgICAgIC8v6LSj5Lu75bqmCiAgICAgICAgICAgIGV4YW1pbmVfdGV4dG9uZTogdGhpcy5lY29ub21pYywKICAgICAgICAgICAgLy/nm7TmjqXnu4/mtY7mjZ/lpLEKICAgICAgICAgICAgZXhhbWluZV90ZXh0dHdvOiB0aGlzLnByZWxpbWluYXJ5IC8v5aSE55CG5oSP6KeBCgogICAgICAgICAgfTsKICAgICAgICAgIGNvbnNvbGUubG9nKF9wYXJhbXMxMik7CiAgICAgICAgICBzZXJ2aWNlLmVuZChfcGFyYW1zMTIpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpOwoKICAgICAgICAgICAgaWYgKHJlcy5jb2RlID09IDIwMDEwKSB7CiAgICAgICAgICAgICAgX3RoaXM0LiRtZXNzYWdlKHsKICAgICAgICAgICAgICAgIG1lc3NhZ2U6IHJlcy5tc2csCiAgICAgICAgICAgICAgICB0eXBlOiAic3VjY2VzcyIsCiAgICAgICAgICAgICAgICBkdXJhdGlvbjogMTAwMAogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIF90aGlzNC4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgICBtZXNzYWdlOiByZXMubXNnLAogICAgICAgICAgICAgICAgdHlwZTogImVycm9yIiwKICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAxMDAwCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIC8vIOmAgOWbngogICAgc2VuZDogZnVuY3Rpb24gc2VuZCgpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CgogICAgICBpZiAodGhpcy5jaGVja3N0YXRlID09IC0yKSB7CiAgICAgICAgc2VydmljZS5zZW5kKHRoaXMuJHBhcmVudC5vcGRhdGFbMF0uZXZlbnRfbnVtYmVyLCB0aGlzLnByZWxpbWluYXJ5KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7CgogICAgICAgICAgaWYgKHJlcy5jb2RlID09PSAyMDAxMCkgewogICAgICAgICAgICBfdGhpczUuJG1lc3NhZ2UoewogICAgICAgICAgICAgIG1lc3NhZ2U6IHJlcy5tc2csCiAgICAgICAgICAgICAgdHlwZTogInN1Y2Nlc3MiLAogICAgICAgICAgICAgIGR1cmF0aW9uOiAxMDAwCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgX3RoaXM1LiRtZXNzYWdlKHsKICAgICAgICAgICAgICBtZXNzYWdlOiByZXMubXNnLAogICAgICAgICAgICAgIHR5cGU6ICJlcnJvciIsCiAgICAgICAgICAgICAgZHVyYXRpb246IDEwMDAKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICAvLyDpqbPlm54KICAgIHJlamVjdDogZnVuY3Rpb24gcmVqZWN0KCkgewogICAgICB2YXIgX3RoaXM2ID0gdGhpczsKCiAgICAgIGlmICh0aGlzLmNoZWNrc3RhdGUgPT0gLTEpIHsKICAgICAgICBjb25zb2xlLmxvZyh0aGlzLiRwYXJlbnQub3BkYXRhWzBdLmV2ZW50X251bWJlcik7CiAgICAgICAgY29uc29sZS5sb2codGhpcy5wcmVsaW1pbmFyeSk7CiAgICAgICAgc2VydmljZS5yZWplY3QodGhpcy4kcGFyZW50Lm9wZGF0YVswXS5ldmVudF9udW1iZXIsIHRoaXMucHJlbGltaW5hcnkpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgY29uc29sZS5sb2cocmVzKTsKCiAgICAgICAgICBpZiAocmVzLmNvZGUgPT0gMjAwMTApIHsKICAgICAgICAgICAgX3RoaXM2LiRtZXNzYWdlKHsKICAgICAgICAgICAgICBtZXNzYWdlOiByZXMubXNnLAogICAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwKICAgICAgICAgICAgICBkdXJhdGlvbjogMTAwMAogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIF90aGlzNi4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgbWVzc2FnZTogcmVzLm1zZywKICAgICAgICAgICAgICB0eXBlOiAiZXJyb3IiLAogICAgICAgICAgICAgIGR1cmF0aW9uOiAxMDAwCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgaGFuZGxlQ2xvc2U6IGZ1bmN0aW9uIGhhbmRsZUNsb3NlKCkgewogICAgICB0aGlzLmRpYWxvZ1Zpc2libGVzcyA9IGZhbHNlOwogICAgfSwKICAgIENsb3NlOiBmdW5jdGlvbiBDbG9zZSgpIHsKICAgICAgdGhpcy51cGZpbGVzID0gZmFsc2U7CiAgICB9LAogICAgLy8gICDmipXor4nor6bmg4UKICAgIGRldGFpbGU6IGZ1bmN0aW9uIGRldGFpbGUoKSB7CiAgICAgIGlmICh0aGlzLmRpYWxvZ1Zpc2libGVzcyAhPSB0cnVlKSB7CiAgICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlc3MgPSB0cnVlOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZXNzID0gZmFsc2U7CiAgICAgIH0KICAgIH0sCiAgICAvLyAgIOS4iuS8oOaWh+S7tuW8ueeqlwogICAgdXBmaWxlOiBmdW5jdGlvbiB1cGZpbGUoKSB7CiAgICAgIHRoaXMudXBmaWxlcyA9IHRydWU7CiAgICB9LAogICAgLy8g6K6+572u6KGo5aS06aKc6ImyCiAgICBnZXRSb3dDbGFzczogZnVuY3Rpb24gZ2V0Um93Q2xhc3MoX3JlZikgewogICAgICB2YXIgcm93SW5kZXggPSBfcmVmLnJvd0luZGV4OwoKICAgICAgaWYgKHJvd0luZGV4ID09IDApIHsKICAgICAgICByZXR1cm4gImJhY2tncm91bmQ6I2MyYzVmNjtjb2xvcjojMDAwIjsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gIiI7CiAgICAgIH0KICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLnRva2VuID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKTsgLy8gc2VydmljZS5BZGRNYW5hZ2VkKDQpLnRoZW4oKHJlcykgPT4gewogICAgLy8gICB0aGlzLnN0YXRlbGlzdCA9IHJlcy5kYXRhOwogICAgLy8gfSk7CiAgfQp9Ow=="},null]}