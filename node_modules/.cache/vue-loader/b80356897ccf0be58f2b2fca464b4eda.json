{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\2021后台\\Security-Information\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\2021后台\\Security-Information\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\2021后台\\Security-Information\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\2021后台\\Security-Information\\src\\views\\Dashboard\\index.vue?vue&type=template&id=5b204ecd&scoped=true&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\2021后台\\Security-Information\\src\\views\\Dashboard\\index.vue","mtime":1609551113260},{"path":"C:\\Users\\Administrator\\Desktop\\2021后台\\Security-Information\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\2021后台\\Security-Information\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\2021后台\\Security-Information\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\2021后台\\Security-Information\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}