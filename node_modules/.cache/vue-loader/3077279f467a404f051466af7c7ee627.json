{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\2021后台\\Security-Information\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\2021后台\\Security-Information\\src\\views\\H-Technological\\components\\flowMain.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\2021后台\\Security-Information\\src\\views\\H-Technological\\components\\flowMain.vue","mtime":1609551113289},{"path":"C:\\Users\\Administrator\\Desktop\\2021后台\\Security-Information\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\2021后台\\Security-Information\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\2021后台\\Security-Information\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\2021后台\\Security-Information\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\2021后台\\Security-Information\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYXBwY29udGFpbmVyIHsKICBkaXNwbGF5OiBmbGV4OwogIGhlaWdodDogY2FsYygxMDB2aCAtIDIwcHgpOwogIGNvbG9yOiAjNjA2MjY2Owp9CgouZmxvdy1kZXRhaWwgewogIGZsZXg6IDE7CiAgYm9yZGVyOiAxcHggc29saWQgI0VCRUVGNTsKICBwYWRkaW5nOiAxMnB4OwogIGJveC1zaGFkb3c6IDAgMnB4IDEycHggMCByZ2JhKDAsIDAsIDAsIC4xKTsKICB3b3JkLWJyZWFrOiBicmVhay1hbGw7CiAgYm9yZGVyLXJhZGl1czogNHB4OwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKfQoKI2Zsb3dDb250ZW50IHsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7CiAgcG9zaXRpb246IHJlbGF0aXZlOwp9CgouaXRlbSB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHdpZHRoOiA2MHB4OwogIGhlaWdodDogOTBweDsKICBib3JkZXI6IDFweCBzb2xpZCAjMDA3QUZGOwp9CgouZmxvdy1tZW51IHsKICB3aWR0aDogMTAwcHg7CiAgcGFkZGluZzogMTBweDsKICBtYXJnaW46IDAgMTBweDsKICBib3JkZXI6IDFweCBzb2xpZCAjRUJFRUY1OwogIHBhZGRpbmc6IDEycHg7CiAgYm94LXNoYWRvdzogMCAycHggMTJweCAwIHJnYmEoMCwgMCwgMCwgLjEpOwogIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDsKICBib3JkZXItcmFkaXVzOiA0cHg7Cn0KCi5tZW51LWl0ZW0gewogIHRleHQtYWxpZ246IGNlbnRlcjsKICBib3gtc2hhZG93OiAwIDAgNHB4ICM2OTY5Njk7CiAgbWFyZ2luLWJvdHRvbTogOHB4OwogIGN1cnNvcjogcG9pbnRlcjsKICBmb250LXNpemU6IDE0cHg7CiAgY29sb3I6ICM2MDYyNjY7CiAgcGFkZGluZzogNXB4IDA7CiAgYm9yZGVyLXJhZGl1czogNXB4Owp9CgoubWVudS1pdGVtPmkgewogIGZvbnQtc2l6ZTogMzBweDsKfQoKLmZsb3ctZWRpdCB7CiAgd2lkdGg6IDMwMHB4OwogIHBhZGRpbmc6IDAgMTBweDsKfQoKLmZsb3ctZWRpdC1jb250ZW50IHsKICBiYWNrZ3JvdW5kOiAjRkZGOwogIGNvbG9yOiAjNjA2MjY2OwogIGxpbmUtaGVpZ2h0OiAxLjQ7CiAgdGV4dC1hbGlnbjoganVzdGlmeTsKICBmb250LXNpemU6IDE0cHg7CiAgYm9yZGVyOiAxcHggc29saWQgI0VCRUVGNTsKICBwYWRkaW5nOiAxMnB4OwogIGJveC1zaGFkb3c6IDAgMnB4IDEycHggMCByZ2JhKDAsIDAsIDAsIC4xKTsKICB3b3JkLWJyZWFrOiBicmVhay1hbGw7CiAgYm9yZGVyLXJhZGl1czogNHB4Owp9Ci5jc3NsYWJlbCB7CiAgICAgIGNvbG9yOiAjNDM0MzQzOwogICAgICBmb250LXdlaWdodDogNDAwOwogICAgICB6LWluZGV4OiAxMDsKICAgICAgZm9udC1zaXplOiAxMnB4OwogICAgICBjb2xvcjogIzQwOWVmZjsKICAgICAgYmFja2dyb3VuZDogI2ZmZjsKICB9CiAgLmNzc2xhYmVsIC5sYWJlbC10ZXh0IHsKICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7CiAgfQouc2F2ZWJ0biB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogNXB4OwogIHJpZ2h0OiA1cHg7Cn0K"},{"version":3,"sources":["flowMain.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkeA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"flowMain.vue","sourceRoot":"src/views/H-Technological/components","sourcesContent":["<template>\r\n  <div class=\"appcontainer\">\r\n    <div class=\"flow-menu\">\r\n      <div class=\"menu-item\" v-for=\"item in menueList\" :key=\"item.id\" draggable=\"true\" @dragstart=\"drag(item)\">\r\n        <i :class=\"item.icon\"></i>\r\n        <div>{{item.name}}</div>\r\n      </div>\r\n      <hr>\r\n      <div class=\"menu-item\" @click=\"isConnect=true\">\r\n        <i class=\"el-icon-bottom-right\"></i>\r\n        <div>连线</div>\r\n      </div>\r\n      <div class=\"menu-item\" @click=\"isConnect=false\">\r\n        <i class=\"el-icon-rank\"></i>\r\n        <div>选择</div>\r\n      </div>\r\n\r\n    </div>\r\n    <div class=\"flow-detail\">\r\n      <div id=\"flowContent\"\r\n           ref=\"flowContent\"\r\n           @drop=\"drop($event)\"\r\n           @dragover=\"allowDrop($event)\"\r\n           @click=\"editFlow()\"\r\n           @dblclick=\"isConnect=false\">\r\n        <flowNode v-for=\"node in data.nodeList\" :key=\"node.id\"\r\n                  :node=\"node\"\r\n                  :id=\"node.id\"\r\n                  :isconnect=\"isConnect\"\r\n                  @delete-node=\"deleteNode\"\r\n                  @change-node-site=\"changeNodeSite\"\r\n                  @edit-node=\"editNode\">\r\n        </flowNode>\r\n      </div>\r\n      <div class=\"savebtn\">\r\n        <el-button type=\"primary\" size=\"mini\" @click=\"saveData()\">保 存</el-button>\r\n      </div>\r\n    </div>\r\n    <div class=\"flow-edit\">\r\n      <div class=\"flow-edit-content\">\r\n        <edit-flow ref=\"flowEdit\" v-show=\"editType=='flow'\"></edit-flow>\r\n        <edit-node ref=\"nodeForm\" v-show=\"editType=='node'\"></edit-node>\r\n        <edit-line ref=\"lineForm\" v-show=\"editType=='line'\" @line-save=\"lineLabelSave\"></edit-line>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import {jsPlumb} from 'jsplumb'\r\n  import flowNode from './flowNode.vue'\r\n  import editFlow from './editFlow.vue'\r\n  import editNode from './editNode.vue'\r\n  import editLine from './editLine.vue'\r\n  export default {\r\n    name: 'flowMain',\r\n    data() {\r\n      return {\r\n        menueList: [{\r\n            type: 1,\r\n            name: '起点',\r\n            \r\n          },\r\n          {\r\n            type: 2,\r\n            name: '终点',\r\n          },\r\n          \r\n        ],\r\n        jsPlumb: null, // jsPlumb 实例\r\n        index: 1,\r\n        // 默认设置参数\r\n        jsplumbSetting: {\r\n          // 动态锚点、位置自适应\r\n          Anchors: ['Top', 'TopCenter', 'TopRight', 'TopLeft', 'Right', 'RightMiddle', 'Bottom', 'BottomCenter',\r\n            'BottomRight', 'BottomLeft', 'Left', 'LeftMiddle'\r\n          ],\r\n          Container: 'flowContent',\r\n          // 连线的样式 StateMachine、Flowchart,有四种默认类型：Bezier（贝塞尔曲线），Straight（直线），Flowchart（流程图），State machine（状态机）\r\n          Connector: 'Straight',\r\n          //这个是鼠标拉出来的线的属性\r\n          ConnectionOverlays: [\r\n            [\"Label\", {\r\n              label: \"连线文本\",\r\n              id: \"label-1\",\r\n              cssClass: \"csslabel\"\r\n            }]\r\n          ],\r\n          // 鼠标不能拖动删除线\r\n          ConnectionsDetachable: false,\r\n          // 删除线的时候节点不删除\r\n          DeleteEndpointsOnDetach: false,\r\n          // 连线的端点\r\n          // Endpoint: [\"Dot\", {radius: 5}],\r\n          Endpoint: [\"Rectangle\", {\r\n            height: 10,\r\n            width: 10\r\n          }],\r\n          // 线端点的样式\r\n          EndpointStyle: {\r\n            fill: 'rgba(255,255,255,0)',\r\n            outlineWidth: 1\r\n          },\r\n          LogEnabled: true, //是否打开jsPlumb的内部日志记录\r\n          // 绘制线\r\n          PaintStyle: {\r\n            stroke: '#409eff',\r\n            strokeWidth: 2\r\n          },\r\n          // 绘制箭头\r\n          Overlays: [\r\n            ['Arrow', {\r\n              width: 8,\r\n              length: 8,\r\n              location: 1\r\n            }],\r\n          ],\r\n          RenderMode: \"svg\"\r\n        },\r\n        // jsplumb连接参数\r\n        jsplumbConnectOptions: {\r\n          isSource: true,\r\n          isTarget: true,\r\n          // 动态锚点、提供了4个方向 Continuous、AutoDefault\r\n          anchor: \"Continuous\",\r\n        },\r\n        jsplumbSourceOptions: {\r\n          filter: \".flow-node-drag\",  //触发连线的区域\r\n          /*\"span\"表示标签，\".className\"表示类，\"#id\"表示元素id*/\r\n          filterExclude: false,\r\n          anchor: \"Continuous\",\r\n          allowLoopback: false\r\n        },\r\n        jsplumbTargetOptions: {\r\n          filter: \".flow-node-drag\",\r\n          /*\"span\"表示标签，\".className\"表示类，\"#id\"表示元素id*/\r\n          filterExclude: false,\r\n          anchor: \"Continuous\",\r\n          allowLoopback: false\r\n        },\r\n        // 是否加载完毕\r\n        loadEasyFlowFinish: false,\r\n        // 数据\r\n        data: {\r\n          flowInfo: {\r\n            Id: this.getUUID(),\r\n            Name: '我的流程',\r\n            Remark: '',\r\n          },\r\n          nodeList: [],\r\n          lineList: []\r\n        },\r\n        currentItem: '', //临时存添加的元素\r\n        isConnect: false, //判断是否连接\r\n        timer: null, //定时器,判断单双击,\r\n        currentConnect: '', //当前的连接线\r\n        currentLine: '', //当前连接线数据\r\n        editType: '', //编辑的类型\r\n      }\r\n    },\r\n    components: {\r\n      flowNode,\r\n      editFlow,\r\n      editNode,\r\n      editLine\r\n    },\r\n    created() {},\r\n    mounted() {\r\n      this.jsPlumb = jsPlumb.getInstance();\r\n      this.$nextTick(() => {\r\n        this.init();\r\n      });\r\n      this.editFlow()\r\n    },\r\n    methods: {\r\n      init() {\r\n        const _this = this\r\n        this.jsPlumb.ready(function() {\r\n\r\n          // 导入默认配置\r\n          _this.jsPlumb.importDefaults(_this.jsplumbSetting)\r\n          // 会使整个jsPlumb立即重绘。\r\n          _this.jsPlumb.setSuspendDrawing(false, true);\r\n          // 初始化节点\r\n          _this.loadEasyFlow()\r\n\r\n          // 单点连接线（编辑label）,\r\n          _this.jsPlumb.bind('click', function(conn, originalEvent) {\r\n            //clearTimeout(this.timer);\r\n            //this.timer = setTimeout(function () { // 这里采用执行自定义事件的方式\r\n            //    console.log(\"click\", conn);\r\n            //    _this.editLine(conn);\r\n            //}, 300); // 延迟300ms执行单击事件,区分双击事件\r\n            console.log(\"click\", conn);\r\n            _this.editLine(conn);\r\n            console.log(conn.getOverlay(\"label-1\"));\r\n            //conn.getOverlay(\"label-1\").setLabel('大肥肚'); //初始化label\r\n          })\r\n          // 双击连接线（删除）,\r\n          _this.jsPlumb.bind('dblclick', function (conn, originalEvent) {\r\n             clearTimeout(this.timer);\r\n             console.log(\"dblclick\", conn)\r\n\r\n             _this.$confirm('确定删除所点击的线吗?', '提示', {\r\n                 confirmButtonText: '确定',\r\n                 cancelButtonText: '取消',\r\n                 type: 'warning'\r\n             }).then(() => {\r\n                 _this.jsPlumb.deleteConnection(conn)\r\n             }).catch(() => { })\r\n          })\r\n          // 连线\r\n          _this.jsPlumb.bind(\"connection\", function(evt) {\r\n            console.log('connection', evt)\r\n            let from = evt.source.id\r\n            let to = evt.target.id\r\n            if (_this.loadEasyFlowFinish) {\r\n              _this.data.lineList.push({\r\n                from: from,\r\n                to: to,\r\n                label: '连线名称',\r\n                id: _this.getUUID(),\r\n                Remark: '',\r\n              })\r\n            };\r\n            setTimeout(function() {\r\n              _this.editLine(evt.connection);\r\n            }, 100);\r\n          })\r\n\r\n          // 删除连线\r\n          _this.jsPlumb.bind(\"connectionDetached\", function(evt) {\r\n            console.log('connectionDetached', evt)\r\n            _this.deleteLine(evt.sourceId, evt.targetId)\r\n          })\r\n\r\n          // 改变线的连接节点\r\n          _this.jsPlumb.bind(\"connectionMoved\", function(evt) {\r\n            console.log('connectionMoved', evt)\r\n            _this.changeLine(evt.originalSourceId, evt.originalTargetId)\r\n          })\r\n\r\n          // 单击endpoint\r\n          // jsPlumb.bind(\"endpointClick\", function (evt) {\r\n          //   console.log('endpointClick', evt)\r\n          // })\r\n          //\r\n          // // 双击endpoint\r\n          // jsPlumb.bind(\"endpointDblClick\", function (evt) {\r\n          //   console.log('endpointDblClick', evt)\r\n          // })\r\n\r\n          // contextmenu 右键\r\n          _this.jsPlumb.bind(\"contextmenu\", function(evt) {\r\n            console.log('contextmenu', evt)\r\n          })\r\n\r\n\r\n          // beforeDrop\r\n          _this.jsPlumb.bind(\"beforeDrop\", function(evt) {\r\n            console.log('beforeDrop', evt)\r\n            let from = evt.sourceId\r\n            let to = evt.targetId\r\n            if (from === to) {\r\n              _this.$message.error('不能连接自己');\r\n              return false\r\n            }\r\n            if (_this.hasLine(from, to)) {\r\n              _this.$message.error('不能重复连线');\r\n              return false\r\n            }\r\n            if (_this.hashOppositeLine(from, to)) {\r\n              _this.$message.error('不能回环哦');\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n\r\n          // beforeDetach\r\n          _this.jsPlumb.bind(\"beforeDetach\", function(evt) {\r\n            console.log('beforeDetach', evt)\r\n          })\r\n        })\r\n\r\n      },\r\n      // 加载流程图\r\n      loadEasyFlow() {\r\n\r\n        // 初始化节点\r\n        for (var i = 0; i < this.data.nodeList.length; i++) {\r\n          let node = this.data.nodeList[i]\r\n          // 设置源点，可以拖出线连接其他节点\r\n          this.jsPlumb.makeSource(node.id, this.jsplumbSourceOptions)\r\n          // // 设置目标点，其他源点拖出的线可以连接该节点\r\n          this.jsPlumb.makeTarget(node.id, this.jsplumbTargetOptions)\r\n          // jsPlumb.addEndpoint(node.id)\r\n          // 设置可拖拽\r\n          // jsPlumb.draggable(node.id, {\r\n          //     containment: 'parent',\r\n          //     grid: [10, 10]\r\n          // })\r\n\r\n          this.jsPlumb.draggable(node.id, {\r\n            containment: 'parent'\r\n          })\r\n\r\n          // jsPlumb.draggable(node.id)\r\n        }\r\n\r\n        // 初始化连线\r\n        for (var i = 0; i < this.data.lineList.length; i++) {\r\n          let line = this.data.lineList[i]\r\n          let connection = this.jsPlumb.connect({\r\n            source: line.from,\r\n            target: line.to,\r\n          }, this.jsplumbConnectOptions);\r\n\r\n          connection.getOverlay(\"label-1\").setLabel(line.label); //初始化label\r\n        }\r\n        this.$nextTick(function() {\r\n          this.loadEasyFlowFinish = true\r\n        })\r\n      },\r\n      // 添加新的节点\r\n      addNode(temp) {\r\n        console.log('添加节点', temp)\r\n        this.data.nodeList.push(temp);\r\n        this.$nextTick(function() {\r\n          this.jsPlumb.makeSource(temp.id, this.jsplumbSourceOptions)\r\n          this.jsPlumb.makeTarget(temp.id, this.jsplumbTargetOptions)\r\n          this.jsPlumb.draggable(temp.id, {\r\n            containment: 'parent'\r\n          })\r\n\r\n        })\r\n      },\r\n      // 删除线\r\n      deleteLine(from, to) {\r\n        this.data.lineList = this.data.lineList.filter(function(line) {\r\n          return line.from !== from && line.to !== to\r\n        })\r\n      },\r\n      // 改变连线\r\n      changeLine(oldFrom, oldTo) {\r\n        this.deleteLine(oldFrom, oldTo)\r\n      },\r\n      // 改变节点的位置\r\n      changeNodeSite(data) {\r\n        for (var i = 0; i < this.data.nodeList.length; i++) {\r\n          let node = this.data.nodeList[i]\r\n          if (node.id === data.nodeId) {\r\n            node.left = data.left\r\n            node.top = data.top\r\n          }\r\n        }\r\n      },\r\n      //删除节点\r\n      deleteNode(nodeId) {\r\n        this.$confirm('确定要删除节点' + nodeId + '?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning',\r\n          closeOnClickModal: false\r\n        }).then(() => {\r\n          // this.data.nodeList = this.data.nodeList.filter(function(node) {\r\n          // \tif (node.id === nodeId) {\r\n          // \t\tnode.show = false\r\n          // \t}\r\n          // \treturn true\r\n          // })\r\n          this.data.nodeList.forEach((item, index) => {\r\n            if (item.id === nodeId) {\r\n              this.data.nodeList.splice(index, 1);\r\n            }\r\n          })\r\n\r\n          this.$nextTick(function() {\r\n            console.log('删除' + nodeId)\r\n            this.jsPlumb.removeAllEndpoints(nodeId);\r\n          })\r\n        }).catch(() => {})\r\n        return true\r\n      },\r\n      //编辑节点\r\n      editNode(nodeId) {\r\n        //console.log('编辑节点', nodeId)\r\n        this.editType = 'node';\r\n        this.$nextTick(function() {\r\n          this.$refs.nodeForm.init(this.data, nodeId)\r\n        })\r\n      },\r\n      editLine(conn) {\r\n        var _this = this;\r\n        _this.currentConnect = conn;\r\n        _this.data.lineList.forEach(function(item, index) {\r\n          if (item.from == conn.sourceId && item.to == conn.targetId) {\r\n            _this.currentLine = item;\r\n            _this.editType = 'line';\r\n            _this.$nextTick(function() {\r\n              _this.$refs.lineForm.init(item)\r\n            })\r\n            return;\r\n          }\r\n        });\r\n      },\r\n      //删除线\r\n      delLine(conn) {\r\n        this.$confirm('确定删除所点击的线吗?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          this.jsPlumb.deleteConnection(conn)\r\n        }).catch(() => {})\r\n      },\r\n      // 是否具有该线\r\n      hasLine(from, to) {\r\n        for (var i = 0; i < this.data.lineList.length; i++) {\r\n          var line = this.data.lineList[i]\r\n          if (line.from === from && line.to === to) {\r\n            return true\r\n          }\r\n        }\r\n        return false\r\n      },\r\n      // 是否含有相反的线\r\n      hashOppositeLine(from, to) {\r\n        return this.hasLine(to, from)\r\n      },\r\n      lineLabelSave(line) {\r\n        this.currentConnect.getOverlay(\"label-1\").setLabel(line.label);\r\n        //this.$set(this.currentLine, 'label', line.label);\r\n      },\r\n      drag(item) {\r\n        this.currentItem = item;\r\n      },\r\n      drop(event) {\r\n        //event.preventDefault();\r\n        var _obj = this.$refs.flowContent;\r\n        var temp = {\r\n          id: this.getUUID(),\r\n          label: this.currentItem.name,\r\n          top: event.offsetY + 'px',\r\n          left: event.offsetX + 'px',\r\n          Type: this.currentItem.type\r\n        }\r\n        this.addNode(temp);\r\n        this.editNode(temp.id);\r\n      },\r\n      allowDrop(event) {\r\n        event.preventDefault()\r\n      },\r\n      getUUID() {\r\n        var s = [];\r\n        var hexDigits = \"0123456789abcdef\";\r\n        for (var i = 0; i < 36; i++) {\r\n          s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\r\n        }\r\n        s[14] = \"4\"; // bits 12-15 of the time_hi_and_version field to 0010\r\n        s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1); // bits 6-7 of the clock_seq_hi_and_reserved to 01\r\n        s[8] = s[13] = s[18] = s[23] = \"-\";\r\n        var uuid = s.join(\"\");\r\n        return uuid;\r\n      },\r\n      saveData() {\r\n        //console.log(this.jsPlumb)\r\n        //console.log(this.jsPlumb.Defaults)\r\n        //console.log('线', this.jsPlumb.getConnections())\r\n        console.log(this.data);\r\n      },\r\n      editFlow() {\r\n        this.editType = 'flow';\r\n        this.$nextTick(function() {\r\n          this.$refs.flowEdit.init(this.data.flowInfo);\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .appcontainer {\r\n    display: flex;\r\n    height: calc(100vh - 20px);\r\n    color: #606266;\r\n  }\r\n\r\n  .flow-detail {\r\n    flex: 1;\r\n    border: 1px solid #EBEEF5;\r\n    padding: 12px;\r\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, .1);\r\n    word-break: break-all;\r\n    border-radius: 4px;\r\n    position: relative;\r\n  }\r\n\r\n  #flowContent {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n  }\r\n\r\n  .item {\r\n    position: absolute;\r\n    width: 60px;\r\n    height: 90px;\r\n    border: 1px solid #007AFF;\r\n  }\r\n\r\n  .flow-menu {\r\n    width: 100px;\r\n    padding: 10px;\r\n    margin: 0 10px;\r\n    border: 1px solid #EBEEF5;\r\n    padding: 12px;\r\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, .1);\r\n    word-break: break-all;\r\n    border-radius: 4px;\r\n  }\r\n\r\n  .menu-item {\r\n    text-align: center;\r\n    box-shadow: 0 0 4px #696969;\r\n    margin-bottom: 8px;\r\n    cursor: pointer;\r\n    font-size: 14px;\r\n    color: #606266;\r\n    padding: 5px 0;\r\n    border-radius: 5px;\r\n  }\r\n\r\n  .menu-item>i {\r\n    font-size: 30px;\r\n  }\r\n\r\n  .flow-edit {\r\n    width: 300px;\r\n    padding: 0 10px;\r\n  }\r\n\r\n  .flow-edit-content {\r\n    background: #FFF;\r\n    color: #606266;\r\n    line-height: 1.4;\r\n    text-align: justify;\r\n    font-size: 14px;\r\n    border: 1px solid #EBEEF5;\r\n    padding: 12px;\r\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, .1);\r\n    word-break: break-all;\r\n    border-radius: 4px;\r\n  }\r\n  .csslabel {\r\n        color: #434343;\r\n        font-weight: 400;\r\n        z-index: 10;\r\n        font-size: 12px;\r\n        color: #409eff;\r\n        background: #fff;\r\n    }\r\n    .csslabel .label-text {\r\n        background-color: white;\r\n    }\r\n  .savebtn {\r\n    position: absolute;\r\n    top: 5px;\r\n    right: 5px;\r\n  }\r\n</style>\r\n"]}]}